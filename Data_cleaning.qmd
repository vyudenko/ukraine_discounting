---
title: "Data cleaning & Analysis"
author: "Vadym Yudenko"
format: 
  html:
    self-contained: true
    toc: true
    toc-location: right 
    toc-title: Contents 
    number-sections: false
editor: visual
---

# Setup

```{r, warning=FALSE, message=FALSE, echo=FALSE}
# loading packages
library(lattice)
library(tidyverse)
library(likert)
library(MASS)
library(psych)
library(viridis)
library(ggplot2)
library(ggrepel)
library(here)
library(flextable)
library(devtools)
library(GPArotation)
library(ufs)
library(remotes)
library(ggplot2)
library(ggExtra)
library(ggthemes)
library(gtsummary)
library(hrbrthemes)
library(scales)
library(stargazer)
library(fastDummies)
library(huxtable)
library(jtools)
library(AER)
library(haven)

```

```{r}
data <- read_sav("data/gradus_data.sav")

colnames(data)[colnames(data) == "intnr"] <- "ResponseID"
data <- data[, -c(2,41,60)]

data_copy <- data

# Fixing temporal discounting answers 

change_values <- function(x) {
  x[x == 1] <- 0
  x[x == 2] <- 1
  return(x)
}

data_copy[, c(2:18)] <- lapply(data_copy[, c(2:18)], change_values)


# Calculating temporal discounting score and anomalies

# writexl::write_xlsx(data_copy, "survey.xlsx", col_names = TRUE)
```

```{r}
# Survey answers deciphered

# oblast_before - Де Ви проживали до 24 лютого 2022 року?
#...

# geosoc6 - Що найкраще описує Ваші дії після початку повномасштабного вторгнення 24 лютого 2022 року?

# 1 - Я залишився(лась) в своєму місті (те, в якому проживав до 24.02.2022) 
# 2 - Я покинув(ла) своє місто (те, в якому проживав до 24.02.2022) і вже повернувся(лась) до цього міста назад
# 3 - Я покинув(ла) своє місто (те, в якому проживав до 24.02.2022) і НЕ повернувся(лась) до цього міста назад


# geosoc7 - Куди Ви переїждали після початку повномасштабного вторгнення (після 24 лютого 2022 року)? (якщо Ви переїжджали кілька разів, виберіть варіант, де Ви залишалися найдовше)
# 1 - В межах моєї області
# 2 - В іншу область України
# 3 - За кордон


# oblast_moving - До якої області Ви переїжджали після початку повномасштабного вторгнення (після 24 лютого 2022 року)?
#...

# geosoc9 - До якої країни Ви переїждали після початку повномасштабного вторгнення (після 24 лютого 2022 року?
# 1 - Польша
# 2 - Німеччина
# 3 - Чехія
# 4 - Інша

# geosoc10 - Чи плануєте Ви повернутись в Україну?
# 1 - Так, планую
# 2  - Ні, не планую
# 3 - Ще не визначився(лась)


# q21 - Який Ваш індивідуальний середній місячний дохід у 2023 році (усі джерела)?
# 1 - Менше 5 000 грн
# 2 - 5 000 - 19 999 грн
# 3 - 20 000 - 39 999 грн
# 4 - 40 000 - 59 999 грн
# 5 - 60 000 - 79 999 грн
# 6 - Більше 80 000 грн
# 7 - Не хочу відповідати

# q21_1 - Який Ваш сімейний середній місячний дохід у 2023 році (усі джерела)?
# 1 - Менше 5 000 грн
# 2 - 5 000 - 19 999 грн
# 3 - 20 000 - 39 999 грн
# 4 - 40 000 - 59 999 грн
# 5 - 60 000 - 79 999 грн
# 6 - Більше 80 000 грн
# 7 - Не хочу відповідати

# q22 - Які Ваші очікування щодо власного фінансового становища на наступні 12 місяців? Я очікую що…
# 1 - Буде набагато гірше, ніж зараз
# 2 - Буде дещо гірше, ніж зараз
# 3 - Буде приблизно так само
# 4 - Буде дещо краще, ніж зараз
# 5 - Буде набагато краще, ніж зараз
 
# q23 - Загалом, враховуючи вплив повномаштабної війни, як змінилося Ваше фінансове становище протягом війни, порівняно з початком 2022 року?
# 1 - Суттєво погіршилось
# 2 - Дещо погіршилось
# 3 - Ніяк не змінилось
# 4 - Дещо покращилось
# 5 - Суттєво покращилось

# q24 - Чи є у Вас наразі будь-які фінансові зобов'язання (оплата по кредиту, аліменти, штрафи, іпотека, розстрочка, кредитний ліміт тощо), які Вам необхідно сплатити?
# Так, є
# Ні, немає

# q25 - Яку частину Ваших місячних доходів Ви витрачаєте на виплату фінансових зобов'язань?
# 1 - Меншу частину
# 2 - Половину
# 3 - Більшу частину

# q26_1 - Скільки часу протягом останніх чотирьох тижнів Ви почувалися спокійним(ою)?
# 1 - Весь час
# 2 - Більшу частину часу
# 3 - Досить часто
# 4 - Іноді
# 5 - Меншу частину часу
# 6 - Зовсім не почувався(лась) спокійним(ою)
 
# q26_2 - Скільки часу протягом останніх чотирьох тижнів Ви почувалися сповненими енергії?
# 1 - Весь час
# 2 - Більшу частину часу
# 3 - Досить часто
# 4 - Іноді
# 5 - Меншу частину часу
# 6 - Зовсім не почувався(лась) сповненим(ою) енергією
 
# q26_3 - Скільки часу протягом останніх чотирьох тижнів Ви почувалися пригнічено?
# 1 - Весь час
# 2 - Більшу частину часу
# 3 - Досить часто
# 4 - Іноді
# 5 - Меншу частину часу
# 6 - Зовсім не почувався(лась) пригніченим(ою)

#q27_intro - Наступні запитання стосуються Вашого досвіду повномасштабної війни. Вони можуть бути досить чутливими для деяких людей. Ваші відповіді дуже важливі для нас, і якщо Ви не хочете відповідати на них, то можете обрати "Не хочу відповідати"

# q27 - Виберіть усе, з чим Ви стикалися з початку повномасштабної війни?

# q27_1 - Евакуація
# q27_2 - Життя на окупованій території
# q27_3 - Стрілянина / бомбардування / ракетні атаки
# q27_4 - Пошкодження власного майна внаслідок бойових дій
# q27_5 - Фізичне насилля зі зброєю або без неї
# q27_6 - Емоційне насилля (погроза фізичної розправи, приниження, залякування)
# q27_7 - Пограбування, крадіжка або шахрайство
# q27_8 - Служба близької людини у складі Сил оборони України (ЗСУ, Нацгвардія)
# q27_9 - Втрата близької людини (родича, друга) внаслідок військової агресії росії
# q27_10 - Не хочу відовідати

# q28 - Чи страждали Ви від будь-якої з наведених нижче проблем, що виникли після початку війни в лютому 2022 року?

# q28_1 - Тілесні ушкодження (поранення, переломи тощо)
# q28_2 - Депресія, тривога або панічні атаки
# q28_3 - Втрата впевненості в собі, відчуття вразливості
# q28_4 - Труднощі зі сном та / або концентрацією
# q28_5 - Жоден з вищеперелічених варіантів
# q28_6 - Не хочу відповідати

# q39 - На Вашу думку, як довго триватимуть активні бойові дії в Україні?
# 1 - До кінця осені 2023
# 2 - До зими 2023-2024
# 3 - До кінця 2024 року
# 4 - Активні бойові дії розтягнуться на роки
# 5 - Інше
# 6 - Важко відповісти

# geosoc1 - Який Ваш сімейний статус?
# 1 - Неодружений / незаміжня
# 2 - Одружений / заміжня і проживаю РАЗОМ з чоловіком / дружиною
# 3 - Одружений / заміжня і зараз проживаю з чоловіком / дружиною ОКРЕМО
# 4 - Цивільний шлюб
# 5 - Розлучений / розлучена
# 6 - Вдівець / вдова
# 7 - Не хочу відповідати

# geosoc2 - Чи є у Вас діти?
# 1 - Так, є тільки діти до 18 років
# 2 - Так, є тільки повнолітні (старше 18 років) діти
# 3 - Так, є як повнолітні, так і неповнолітні діти
# 4 - Ні, але наразі очікуємо на появу
# 5 - Ні, немає дітей

# geosoc3 - Чи проживаєте Ви разом зі своїми неповнолітніми дітьми?
# 1 - Проживаю разом з усіма своїми неповнолітніми дітьми
# 2 - Проживаю разом з деякими своїми неповнолітніми дітьми, не з усіма
# 3 - Не проживаю разом зі своїми неповнолітніми дітьми
# 4 - Інше



```

















```{r}
get_scores <- function (x) {
  
  ## This function will compute the total temporal discount for each participant based on their responses to each block question
  ##
  ## Input (x): A block of questions (5 previous questions to the one parsed to the function)
  ##
  ## Output: Vector of individual sum responses per block
  
  f <- as.numeric(gsub("block", "", x$block))[1]
  
  if (f == 1) {
    x %>% 
      mutate(score = case_when(
        amount_later == 750 & choice == 0 ~ 5,
        amount_later == 750 & choice == 1 ~ 4,
        amount_later == 600 & choice == 1 ~ 3,
        amount_later == 510 & choice == 0 ~ 2,
        amount_later == 505 & choice == 0 ~ 1,
        amount_later == 505 & choice == 1 ~ 0
      ))
    
  } else if (f == 2) {
    x %>% 
      mutate(score = case_when(
        amount_later == 750 & choice == 1 ~ 0,
        amount_later == 750 & choice == 0 ~ 1,
        amount_later == 600 & choice == 0 ~ 2,
        amount_later == 510 & choice == 1 ~ 3,
        amount_later == 505 & choice == 0 ~ 5,
        amount_later == 505 & choice == 1 ~ 4
      ))
  } else {
    x %>% 
      mutate(score = case_when(
        amount_later == 7500 & choice == 0 ~ 5,
        amount_later == 7500 & choice == 1 ~ 4,
        amount_later == 6000 & choice == 1 ~ 3,
        amount_later == 5100 & choice == 0 ~ 2,
        amount_later == 5050 & choice == 0 ~ 1,
        amount_later == 5050 & choice == 1 ~ 0
      ))
  }
}



get_latest_answer <- function (x, y){
  
  ## This function will obtain the latest answer given to the initial baseline questions. This function is necessary to control for the different possible options shown to each individual.
  ##
  ## Input: (x) A data frame including choices to questions; (y) a scalar identifying the next item following the item block. 
  ##
  ## Output: Vector of individual responses to the anomaly item
  
  x %>% 
    group_by(ResponseId) %>% 
    filter(as.numeric(gsub("Q", "", question)) < y) %>% 
    arrange(desc(as.numeric(gsub("Q", "", question)))) %>% 
    slice(1) %>% 
    ungroup() %>% 
    arrange(ResponseId) %>% 
    dplyr:::select(ResponseId, choice, amount_later, block) 
}

get_second_choices <- function (x, y) {
  
  ## This function will obtain the answer given to the anomalies questions. This function necessary to control for the different possible options shown to each individual
  ##
  ## Input: (x) A data frame including choices to questions; (y) the anomaly item identifier. 
  ##
  ## Output: Vector of individual responses to the anomaly item
  
  x %>% 
    arrange(ResponseId) %>%   
    arrange(desc(as.numeric(gsub("Q", "", question)))) %>%   
    filter(question == y) %>% 
    dplyr:::select(choice) %>% 
    unlist() %>% 
    as.vector()
}


fixer_anom <- function (d, type = NULL){
  
  ## This function will compute whether an anomaly was observed (and whether the initial answer was a sooner or later decision) and if the possible anomaly was congruent with theory or not.
  ##
  ## Input: (x) A data frame including the first choice (fc) and the type of anomaly to be estimated. 
  ##
  ## Output: dataframe including the individual id and the variables response (possible anomaly and initial decision) and anomaly (whether an anomaly or a consistent decision was observed).
  
  if (type == "presbias" || type == "absolmag" || type == "delay") {  
    
    d %>%
      mutate(response = case_when (
        fc == 0 & sc == 0 ~ "No anomaly sooner",
        fc == 1 & sc == 0 ~ "Anomaly later",
        fc == 0 & sc == 1 ~ "Anomaly sooner",
        fc == 1 & sc == 1 ~ "No anomaly later")) %>% 
      mutate (response = as.factor(response)) %>% 
      mutate(anomaly = case_when(
        response == "Anomaly later" ~ "Possible anomaly",
        response == "Anomaly sooner" ~ "Possible anomaly",
        response == "No anomaly later" ~ "Consistent",
        response == "No anomaly sooner" ~ "Consistent"
      )) %>% 
      mutate(anomaly = fct_relevel(anomaly, "Consistent", "Possible anomaly")) %>%
      mutate(response = fct_recode(response, 
                                   "Congruent" = "Anomaly sooner", 
                                   "Not congruent" = "Anomaly later")) %>% 
      mutate(type = rep(type, length(response))) %>% 
      dplyr:::select(ResponseId, response, anomaly, type) 
    
  } else if (type == "gainloss") {  
    
    d %>%
      mutate(response = case_when (
        fc == 0 & sc == 0 ~ "Anomaly sooner",
        fc == 1 & sc == 0 ~ "No anomaly later",
        fc == 0 & sc == 1 ~ "No anomaly sooner",
        fc == 1 & sc == 1 ~ "Anomaly later")) %>% 
      mutate (response = as.factor(response)) %>% 
      mutate(anomaly = case_when(
        response == "Anomaly later" ~ "Possible anomaly",
        response == "Anomaly sooner" ~ "Possible anomaly",
        response == "No anomaly later" ~ "Consistent",
        response == "No anomaly sooner" ~ "Consistent"
      )) %>% 
      mutate(anomaly = fct_relevel(anomaly, "Consistent", "Possible anomaly")) %>% 
      mutate(response = fct_recode(response, 
                                   "Congruent" = "Anomaly sooner", 
                                   "Not congruent" = "Anomaly later")) %>%
      mutate(type = rep(type, length(response))) %>% 
      dplyr:::select(ResponseId, response, anomaly, type) 
    
  }
} 


### We clean the data an adapt the questions to be processed in future analysis. We take into consideration that different individuals see a different number of questions with different options depending on their own decisions (i.e., we have an adaptative survery). For each question see, we compute individual choices (i.e., 0 = sooner option chosen, 1 = later option chosen). We create a new dataset (dat_item) including item characteristics (i.e., amount presented for the sooner and later rewards, delay presented for sooner and later rewards, question identifier, block identifier). 

    Gain550 = "Q2",
    Gain600 = "Q3",
    Gain750 = "Q4",
    Gain510 = "Q5",
    Gain505 = "Q6",
    Pay550 = "Q7",
    Pay600 = "Q8",
    Pay750 = "Q9",
    Pay510 = "Q10",
    Pay505 = "Q11",
    Gain5500 = "Q12",
    Gain6000 = "Q13",
    Gain7500 = "Q14",
    Gain5100 = "Q15",
    Gain5050 = "Q16",


dat_item <- 
  dat %>% 
  arrange(ResponseId) %>%   
  mutate(amount_later16 = case_when(
    Gain550 = 1 & Gain510 = 0 ~ 550,
    Gain600 = 1 ~ 600,
    Gain750 = 0 | Gain750 = 1 ~ 750,
    Gain510 = 1 & Gain505 = 0 ~ 510,
    Gain505 = 1 ~ 505)) %>% 
  
  mutate(amount_later17 = case_when(
    Gain550 == "Receiving $550 in 12 months" & Gain510 = 0 ~ 600,
    Gain600 == "Receiving $600 in 12 months" ~ 700,
    Gain750 == "Receiving $750 in 12 months" | Gain750 = 0 ~ 1000,
    Gain510 == "Receiving $510 in 12 months" & Gain505 = 0 ~ 520,
    Gain505 == "Receiving $505 in 12 months" ~ 510)) %>% 
  
  
  mutate(amount_later18 = case_when(
    amount_later16 == 505  ~ 505,
    amount_later16 == 510  ~ 510,
    amount_later16 == 550  ~ 550,
    amount_later16 == 600  ~ 600,
    amount_later16 == 750  ~ 750
  )) %>% 
  
  mutate(amount_later19 = case_when(
    amount_later16 == 505  ~ 505,
    amount_later16 == 510  ~ 510,
    amount_later16 == 550  ~ 550,
    amount_later16 == 600  ~ 600,
    amount_later16 == 750  ~ 750
  )) %>% 
  
  pivot_longer(Gain550:Delay_speedup_2, 
               names_to = c("question")) %>%
  
  mutate(delay_sooner = rep(c(rep(0, 15), 12, 0, 0, 0), length(unique(ResponseId))),
          delay_later  = rep(c(rep(12, 15), 24, 24, 12, 12),length(unique(ResponseId))),
          amount_sooner = rep(c(rep(500, 10), 
                                rep(5000, 5),
                                rep(500, 4)), length(unique(ResponseId)))) %>%
  
  mutate (amount_later = case_when(
    question == "Gain550" | question == "Pay550" ~ 550,
    question == "Gain600" | question == "Pay600" ~ 600,
    question == "Gain750" | question == "Pay750" ~ 750,
    question == "Gain510" | question == "Pay510"~ 510,
    question == "Gain505" | question == "Pay505"~ 505,
    question == "Gain5500" ~ 5500,
    question == "Gain6000" ~ 6000,
    question == "Gain7500" ~ 7500,
    question == "Gain5100" ~ 5100,
    question == "Gain5050" ~ 5050,
    question == "Common_difference" ~ amount_later16,
    question == "Subadditivity" ~ amount_later17,
    question == "Delay_speedup_1" ~ amount_later18,
    question == "Delay_speedup_2" ~ amount_later19
  )) %>%
  
  
  mutate (question = paste("Q",rep(1:ncol(select(dat, Gain550:"Delay_speedup_2")), nrow(dat)), sep ="")) %>%
  mutate (question_num = as.numeric(gsub("Q", "", question))) %>%
  
  mutate ( block = case_when(
    question_num < 6 ~ "block1",
    question_num >= 6 & question_num < 11 ~ "block2",
    question_num >= 11 & question_num < 16 ~ "block3",
    question_num == 16 ~ "anom1",
    question_num == 17 ~ "anom2",
    question_num == 18 ~ "anom3",
    question_num == 19 ~ "anom3",
  )) %>% 
  
  mutate (choice = case_when(
    is.na(value) ~ NA_real_,
    str_detect(value, "500 right now") ~ 0,
    str_detect(value, "5000 right now") ~ 0,
    str_detect(value, "5500 in 12 months") ~ 1,
    str_detect(value, "7500 in 12 months") ~ 1,
    str_detect(value, "500 in 12 months") ~ 0,
    str_detect(value, "Reduce") ~ 0,
    TRUE  ~ 1
  )) %>% 
  
  rename(choice_text = "value") %>% 
  relocate(choice_text, .after = choice) %>%
  
  select(-amount_later16, -amount_later17, -amount_later18, -amount_later19) %>%
  drop_na(choice) %>% 
  mutate_if(is.character,as.factor)

###############################
# 2. Computing anomalies/scores
###############################

## We estimate the anomalies rates for the five anomalies (present bias = presbias; absolute magnitude = absolmag, gain-loss asymmetry = gainloss; delay-speedup = delayspeed; subadditivity = subaddit). 
## We use answers to the three baseline sets of questions plus the answers to the common difference, subadditivity, and delay-speedup items to compute the temporal discount scores.

## Computing the rates of the five anomalies

presbias <- as.numeric(get_latest_answer(dat_item, 6)$choice != get_second_choices(dat_item,"Q16"))
absolmag <- as.numeric(get_latest_answer(dat_item, 6)$choice != as.numeric(get_latest_answer(dat_item, 16)$choice))
gainloss <- as.numeric(get_latest_answer(dat_item, 6)$choice == as.numeric(get_latest_answer(dat_item, 11)$choice))
delayspeed <- as.numeric(get_latest_answer(dat_item, 6)$choice != get_second_choices(dat_item,"Q19"))


anomalies_data <- list()

anomalies_data[[1]] <- fixer_anom (data.frame(fc = get_latest_answer(dat_item, 6)$choice,
                                              sc =  get_second_choices(dat_item,"Q16"),
                                              ResponseId = unique(dat_item$ResponseId)), type = "presbias")

anomalies_data[[2]] <- fixer_anom (data.frame(fc = get_latest_answer(dat_item, 6)$choice,
                                              sc =  as.numeric(get_latest_answer(dat_item, 16)$choice),
                                              ResponseId = unique(dat_item$ResponseId)), type = "absolmag")

anomalies_data[[3]] <- fixer_anom (data.frame(fc = get_latest_answer(dat_item, 6)$choice,
                                              sc =  as.numeric(get_latest_answer(dat_item, 11)$choice),
                                              ResponseId = unique(dat_item$ResponseId)), type = "gainloss")

anomalies_data[[4]] <- fixer_anom (data.frame(fc =  get_latest_answer(dat_item, 6)$choice,
                                              sc =  get_second_choices(dat_item,"Q19"),
                                              ResponseId = unique(dat_item$ResponseId)), type = "delay")

anomalies_congruent <- anomalies_data %>% 
  
  ### We are only interested in individual responses
  reduce(left_join, by = "ResponseId") %>%
  rename ( "presbias" = "response.x",
           "absolmag" = "response.y",
           "gainloss" = "response.x.x",
           "delayspeed" = "response.y.y",
           "subaddit" = "response") %>% 
  
  select(ResponseId, presbias, absolmag, gainloss, delayspeed, subaddit) %>% 
  mutate_at(vars(presbias, absolmag, gainloss, delayspeed, subaddit),
            funs(case_when(
              . == "Congruent" ~ 1,
              TRUE ~ 0)))

scores <- get_scores(get_latest_answer(dat_item, 6))$score +
  5 - get_scores(get_latest_answer(dat_item, 11))$score +
  get_scores(get_latest_answer(dat_item, 16))$score +
  1-get_second_choices(dat_item, "Q16") +
  1-get_second_choices(dat_item, "Q17") +
  get_second_choices(dat_item, "Q18") +
  get_second_choices(dat_item, "Q19")

### We merge these scores and the anomalies rates with the original dataset 
q <- dat_item %>% 
  count(ResponseId) %>% 
  arrange()        

dat_item <- dat_item %>% 
  arrange(ResponseId) %>%
  mutate (score = rep(scores, q$n),
          presbias = rep(anomalies_congruent$presbias, q$n),
          absolmag = rep(anomalies_congruent$absolmag, q$n),
          gainloss = rep(anomalies_congruent$gainloss, q$n),
          delayspeed = rep(anomalies_congruent$delayspeed, q$n),
          subaddit = rep(anomalies_congruent$subaddit, q$n))
```


## EDA


```{r, warning=FALSE, message=FALSE, echo=FALSE}
g2 <- ggplot(data_copy, aes(q21, fill = demo_gender)) +
  geom_bar() +
  labs(title = "Individual income",
       x = "",
       y = "") +
  geom_text(aes(label = ..count..), 
            stat = 'count', vjust = -0.5, 
            color = "black", size = 5, 
            family = "Garamond") +
  theme_classic() +
  scale_x_continuous(breaks = c(1,2,3,4,5,6,7), 
                     labels = c("5-",
                                "5-19",
                                "20-39",
                                "40-59",
                                "60-79",
                                "80+",
                                "Don't want"))


# g1 Plot
g1 <- ggplot(data_copy, aes(x = q21_1)) +
  geom_bar() +
  labs(title = "Household income",
       x = "",
       y = "# of responders") +
  geom_text(aes(label = ..count..), 
            stat = 'count', vjust = -0.5, 
            color = "black", size = 5, 
            family = "Garamond") +
  theme_classic() +
  scale_x_continuous(breaks = c(1,2,3,4,5,6,7), 
                     labels = c("5-",
                                "5-19",
                                "20-39",
                                "40-59",
                                "60-79",
                                "80+",
                                "Don't want"))


# sanity check
check <- data_copy %>% 
  select(q21, q21_1, geosoc1) %>% 
  filter(q21 != 7 & q21_1 != 7) %>%
  mutate(anom = q21 > q21_1,
         breadwinner = q21 == q21_1)

g3 <- ggplot(check, aes(x = as.factor(breadwinner))) +
  geom_bar() +
  labs(title = "Personal income = Household income?",
       x = "",
       y = "# of responders") +
  geom_text(aes(label = ..count..), 
            stat = 'count', vjust = -0.5, 
            color = "black", size = 5, 
            family = "Garamond") +
  theme_classic()

g4 <- check %>% 
  filter(geosoc1 %in% c(1,3,5,6)) %>% 
  ggplot(aes(x = as.factor(breadwinner))) +
  geom_bar() +
  labs(title = "Personal income = Household income 
       + living apart + widow + single",
       x = "",
       y = "# of responders") +
  geom_text(aes(label = ..count..), 
            stat = 'count', vjust = -0.5, 
            color = "black", size = 5, 
            family = "Garamond") +
  theme_classic()

# Arrange Plots
gridExtra::grid.arrange(g1, g2, g3, g4, ncol = 2)
```



```{r, warning=FALSE, message=FALSE, echo=FALSE}
ggplot(data_copy, aes(x = geosoc6)) +
  geom_bar() +
  labs(title = "What best characterizes your actions after Feb 24th 2022?",
       y = "# of respondents") +
  coord_flip() +
   geom_text(stat = 'count', aes(label = ..count..), hjust = -0.5, color = "black", size = 5, family = "Garamond") +
  theme_classic() +
  theme(plot.title = element_text(family = "Garamond", hjust = 0.5, size = 20),
        plot.caption = element_text(family = "Garamond"),
        axis.text.y = element_text(family = "Garamond", size = 15),
        axis.text.x = element_blank(),
        axis.title.x = element_text(family = "Garamond"),
        axis.title.y = element_blank()) +
  scale_x_continuous(breaks = c(1, 2, 3), labels = c("Stayed", "Left&Returned", "Left"))

ggplot(data_copy, aes(x = demo_oblast)) +
  geom_bar() +
  labs(title = "Oblast BEFORE Feb 24th 2022 (w/o Kyiv)",
       y = "# of respondents") +
  coord_flip() +
   geom_text(stat = 'count', aes(label = ..count..), hjust = -0.5, color = "black", size = 5, family = "Garamond") +
  theme_classic() +
  theme(plot.title = element_text(family = "Garamond", hjust = 0.5, size = 20),
        plot.caption = element_text(family = "Garamond"),
        axis.text.y = element_text(family = "Garamond", size = 15),
        axis.text.x = element_blank(),
        axis.title.x = element_text(family = "Garamond"),
        axis.title.y = element_blank()) +
  scale_x_continuous(breaks = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25), 
                   labels = c("Вінницька", "Волинська", "Дніпропетровська", "Донецька", "Житомирська", "Закарпатська", "Запорізька", "Івано-Франківська", "Київська", "Кіровоградська", "Луганська", "Львівська", "м. Київ", "Миколаївська", "Одеська", "Полтавська", "Рівненська", "Сумська", "Тернопільська", "Харківська", "Херсонська", "Хмельницька", "Черкаська", "Чернівецька", "Чернігівська"))

ggplot(data = filter(data_copy, demo_city != "м. Київ"), aes(x = demo_city)) +
  geom_bar() +
  labs(title = "City BEFORE Feb 24th 2022 (w/o Kyiv)",
       y = "# of respondents") +
  coord_flip() +
   geom_text(stat = 'count', aes(label = ..count..), hjust = -0.5, color = "black", size = 4, family = "Garamond") +
  theme_classic() +
    theme(plot.title = element_text(family = "Garamond", hjust = 0.5, size = 20),
        plot.caption = element_text(family = "Garamond"),
        axis.text.x = element_blank(),
        axis.title.x = element_text(family = "Garamond"),
        axis.title.y = element_blank())


ggplot(data_copy, aes(x = oblast_moving)) +
  geom_bar() +
  labs(title = "Oblast AFTER Feb 24th 2022 (w/o Kyiv)",
       y = "# of respondents") +
  coord_flip() +
   geom_text(stat = 'count', aes(label = ..count..), hjust = -0.5, color = "black", size = 5, family = "Garamond") +
  theme_classic() +
  theme(plot.title = element_text(family = "Garamond", hjust = 0.5, size = 20),
        plot.caption = element_text(family = "Garamond"),
        axis.text.y = element_text(family = "Garamond", size = 15),
        axis.text.x = element_blank(),
        axis.title.x = element_text(family = "Garamond"),
        axis.title.y = element_blank()) +
  scale_x_continuous(breaks = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25), 
                   labels = c("Вінницька", "Волинська", "Дніпропетровська", "Донецька", "Житомирська", "Закарпатська", "Запорізька", "Івано-Франківська", "Київська", "Кіровоградська", "Луганська", "Львівська", "м. Київ", "Миколаївська", "Одеська", "Полтавська", "Рівненська", "Сумська", "Тернопільська", "Харківська", "Херсонська", "Хмельницька", "Черкаська", "Чернівецька", "Чернігівська"))



```



```{r, warning=FALSE, message=FALSE, echo=FALSE}
# g4 <- ggplot(data_clean, aes(x = Forced_relocation, fill = region_before)) +
#   geom_bar() +
#   labs(title = "Forced relocation", caption = "before the war") +
#   theme_bw() +
#   theme(legend.position = "none", legend.title = element_blank())
#   
# 
# g5 <- ggplot(data_clean, aes(x = Forced_relocation, fill = region_now)) +
#   geom_bar() +
#   labs(title = "Forced relocation", caption = "now") +
#   theme_bw()
# 
# gridExtra::grid.arrange(g4,g5, ncol = 2)
```

## Analysis

```{r, warning=FALSE, message=FALSE, echo=FALSE}
# colnames(data_full_cat)
data_full_cat <- na.omit(data_full_cat)
mod <- lm(score ~ ., data = data_full_cat)
stargazer(mod, type = "text")
```

Відфільтрував датасет (no NAs) по зарплаті 20+ та 20-.
No significance, окрім Fin_wellbeing_worse (\<0.1) - це dummy (1 - фінансове положення з початку війни погіршилось)

```{r, warning=FALSE, message=FALSE, echo=FALSE}
data_war <- data_copy %>% 
  select(q26_1, q26_2, q26_3, q27_1, q27_2, q27_3, q27_4, q27_5, q27_6, q27_7, q27_8, q27_9, q27_10, q28_1, q28_2, q28_3, q28_4, q28_5, q28_6, demo_age)

mod_war <- lm(demo_age ~ ., data_war)
stargazer(mod_war, 
          header=FALSE,
          type='text', 
          digits=3,
          font.size = "normalsize",
          align = TRUE,
          omit.stat=c("f", "ser"),
          column.sep.width = "-25pt")
```

Відфільтрував датасет (no NAs) по працюючим/непрацюючим.
Непрацюючих тільки 16... краще дивіться на працюючих.
Є вже вплив Debts (\<0.05) \<- good

```{r, warning=FALSE, message=FALSE, echo=FALSE}
data_emp <- data_full_cat %>% 
  filter(Employment == 1) 

data_unemp <- data_full_cat %>% 
  filter(Employment == 0) 

mod_emp <- lm(score ~ ., data_emp)
mod_unemp <- lm(score ~ ., data_unemp)
stargazer(mod_unemp, mod_emp, 
          header=FALSE, 
          title="unemployed vs empployed", 
          type='text', 
          digits=2,
          font.size = "small",
          align = TRUE,
          omit.stat=c("f", "ser"),
          column.sep.width = "-25pt")
```

Відфільтрував датасет (no NAs) по тим гендеру.
Для жінок Debts є сігніфікант на 0.10, що є дуже сумно.
Але це вже щось!

```{r, warning=FALSE, message=FALSE, echo=FALSE}
data_male <- data_full_cat %>% 
  filter(Gender == 0) 

data_female <- data_full_cat %>% 
  filter(Gender == 1) 

mod_f <- lm(score ~ ., data_female)
mod_m <- lm(score ~ ., data_male)
stargazer(mod_f, mod_m, 
          header=FALSE, 
          title="female vs male", 
          type='text', 
          digits=2,
          font.size = "small",
          align = TRUE,
          omit.stat=c("f", "ser"),
          no.space=TRUE)
```

Відфільтрував датасет (no NAs) по тим хто ніколи не бере кредити.

```{r, warning=FALSE, message=FALSE, echo=FALSE}
data_debts <- data_full_cat %>% 
  filter(Debts == 1) 

data_no_debts <- data_full_cat %>% 
  filter(Gender == 0) 

mod_debts <- lm(score ~ ., data_debts)
mod_no_debts <- lm(score ~ ., data_no_debts)
stargazer(mod_debts, mod_no_debts, 
          header=FALSE, 
          title="No debts vs debts", 
          type='text', 
          digits=2,
          font.size = "small",
          align = TRUE,
          omit.stat=c("f", "ser"),
          column.sep.width = "-25pt")
```

Немає сильного зв\*язку між змінними, як не кручу.

```{r, warning=FALSE, message=FALSE, echo=FALSE}
library(PerformanceAnalytics)
chart.Correlation(data_full_cat[,c(1:3,5:12)], histogram=F)

library(corrr)
library(corrplot)


correlation.matrix<-cor(data_full_cat[,c(1:3,5:12)]) 

stargazer(correlation.matrix,title="Correlation Matrix")
```

```{r}
stargazer(mod, mod_f, mod_m, mod_emp, mod_unemp, mod_poor, mod_rich,
          column.labels = c("Full model", "Female", "Male", "employed", "unemployed", "<20k UAH", "20+k UAH"),
          covariate.labels = c("Income", "Debts", "Year of birth", "Gender", "Employment", "No war experience", "Living in Kyiv now", "Living in Kyiv before 24th", "Fast news", "Slow news", "War experience", "Expects worse", "Expects better", "Expects much worse", "Expects much better", "Expects the same", "Secondary education", "Technical education", "BSc or MSc", "PhD"),
          header=FALSE, 
          title="Regression results", 
          type='text', 
          digits=3,
          style = "aer",
          font.size = "small",
          align = TRUE,
          omit = c("Constant"),
          omit.stat=c("f", "ser"),
          no.space=TRUE)
```

```{r}
data_tobit <- data_full_cat[, c(1:16)]
mod_tobit <- tobit(score ~ ., left = 0, data = data_tobit)
stargazer(mod_tobit,          
          header=FALSE, 
          title="Regression results", 
          type='text', 
          digits=3,
          style = "aer",
          font.size = "small",
          align = TRUE,
          omit = c("Constant"),
          omit.stat=c("f", "ser"),
          no.space=TRUE)


data_t <- data_tobit %>% 
  filter(score > 0)

mod_tibit <- lm(score ~ ., data_t)
stargazer(mod_tibit, mod_tobit, mod,          
          header=FALSE, 
          title="Regression results", 
          type='text', 
          digits=3,
          style = "aer",
          font.size = "small",
          align = TRUE,
          omit = c("Constant"),
          omit.stat=c("f", "ser"),
          no.space=TRUE)


corrplot(cor(data_tobit))
```

```{r}
stargazer(mod, mod_t,
          covariate.labels = c("Income", "Debts", "Year of birth", "Gender", "Employment", "No war experience", "Living in Kyiv now", "Living in Kyiv before 24th", "Fast news", "Slow news", "War experience", "Expects worse", "Expects better", "Expects much worse", "Expects much better", "Expects the same", "Secondary education", "Technical education", "BSc or MSc", "PhD"),
          header=FALSE, 
          title="Regression results", 
          type='text', 
          digits=3,
          style = "aer",
          font.size = "small",
          align = TRUE,
          omit = c("Constant"),
          omit.stat=c("f", "ser"),
          no.space=TRUE)
```

```{r, warning=FALSE, message=FALSE, echo=FALSE}
data_prospect <- data[, c(1:10)] %>% 
  
  mutate(gain = case_when(
    str_detect(Q1, "Отримати 1600 грн прямо зараз") ~ 1600,
    str_detect(Q1, "Отримати 2080 грн за 3 місяці") ~ 2080)) %>% 
  
  mutate(gain_now_1 = case_when(
    str_detect(Q1_now_1, "Отримати 1600 грн прямо зараз") ~ 1600,
    str_detect(Q1_now_1, "Отримати 2160 грн за 3 місяці") ~ 2160)) %>% 
      
  mutate(gain_now_2 = case_when(
    str_detect(Q1_now_2, "Отримати 1600 грн прямо зараз") ~ 1600,
    str_detect(Q1_now_2, "Отримати 2240 грн за 3 місяці") ~ 2240)) %>% 
  
  mutate(gain_later_1 = case_when(
    str_detect(Q1_wait_1, "Отримати 1600 грн прямо зараз") ~ 1600,
    str_detect(Q1_wait_1, "Отримати 2000 грн за 3 місяці") ~ 2000)) %>%
  
  mutate(gain_later_2 = case_when(
    str_detect(Q1_wait_2, "Отримати 1600 грн прямо зараз") ~ 1600,
    str_detect(Q1_wait_2, "Отримати 1920 грн за 3 місяці") ~ 1920)) %>%
  
  mutate(pay = case_when(
    str_detect(Q2, "Заплатити 1600 грн прямо зараз") ~ -1600,
    str_detect(Q2, "Заплатити 2080 грн за 3 місяці") ~ -2080)) %>%
  
  mutate(pay_later_1 = case_when(
    str_detect(Q2_wait_1, "Заплатити 1600 грн прямо зараз") ~ -1600,
    str_detect(Q2_wait_1, "Заплатити 2240 грн за 3 місяці") ~ -2240)) %>%
  
  mutate(pay_later_2 = case_when(
    str_detect(Q2_wait_2, "Заплатити 1600 грн прямо зараз") ~ -1600,
    str_detect(Q2_wait_2, "Заплатити 2160 грн за 3 місяці") ~ -2160)) %>%
  
  mutate(pay_now_1 = case_when(
    str_detect(Q2_now_1, "Заплатити 1600 грн прямо зараз") ~ -1600,
    str_detect(Q2_now_1, "Заплатити 2000 грн за 3 місяці") ~ -2000)) %>%
  
  mutate(pay_now_2 = case_when(
    str_detect(Q2_now_2, "Заплатити 1600 грн прямо зараз") ~ -1600,
    str_detect(Q2_now_2, "Заплатити 1920 грн за 3 місяці") ~ -1920))

# data_prospect <- data_prospect[, c(11:20)] %>% t()
# data_prospect <- as.data.frame(data_prospect)

```
